(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
var endedTimer, escapeHtml, fresh, onPlayerReady, onPlayerStateChange, play, player, playing, qs, socket, streamSecret, tick;

player = null;

socket = null;

playing = false;

fresh = true;

endedTimer = null;

streamSecret = null;

qs = function(name) {
  var regex, results, url;
  url = window.location.href;
  name = name.replace(/[\[\]]/g, '\\$&');
  regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');
  results = regex.exec(url);
  if (!results || !results[2]) {
    return null;
  }
  return decodeURIComponent(results[2].replace(/\+/g, ' '));
};

escapeHtml = function(t) {
  return t.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
};

// autoplay video
onPlayerReady = function(event) {
  return event.target.playVideo();
};

// when video ends
onPlayerStateChange = function(event) {
  var videoData;
  if (endedTimer != null) {
    clearTimeout(endedTimer);
    endedTimer = null;
  }
  videoData = player.getVideoData();
  if ((videoData != null) && (videoData.title != null)) {
    console.log(`Title: ${videoData.title}`);
    window.document.title = `${videoData.title} - [[MTV]]`;
  }
  if (event.data === 0) {
    console.log("ENDED");
    return endedTimer = setTimeout(function() {
      return playing = false;
    }, 2000);
  }
};

play = function(id, startSeconds = null, endSeconds = null) {
  var opts;
  console.log(`Playing: ${id}`);
  opts = {
    videoId: id
  };
  if ((startSeconds != null) && (startSeconds >= 0)) {
    opts.startSeconds = startSeconds;
  }
  if ((endSeconds != null) && (endSeconds >= 1)) {
    opts.endSeconds = endSeconds;
  }
  player.loadVideoById(opts);
  playing = true;
  return fresh = false;
};

tick = function() {
  if (!playing && (player != null)) {
    console.log("Ready");
    return socket.emit('ready', {
      secret: streamSecret,
      fresh: fresh
    });
  }
};

window.onYouTubePlayerAPIReady = function() {
  console.log("onYouTubePlayerAPIReady");
  player = new YT.Player('player', {
    width: '100%',
    height: '100%',
    videoId: 'AB7ykOfAgIA', // MTV loading screen, this will be replaced almost immediately
    playerVars: {
      'autoplay': 1,
      'controls': 0
    },
    events: {
      onReady: onPlayerReady,
      onStateChange: onPlayerStateChange
    }
  });
  streamSecret = qs("secret");
  console.log(`Stream Secret: ${streamSecret}`);
  socket = io();
  socket.on('play', function(pkt) {
    console.log(pkt);
    return play(pkt.id, pkt.start, pkt.end);
  });
  return setInterval(tick, 5000);
};


},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY2xpZW50L2NsaWVudC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxJQUFBLFVBQUEsRUFBQSxVQUFBLEVBQUEsS0FBQSxFQUFBLGFBQUEsRUFBQSxtQkFBQSxFQUFBLElBQUEsRUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBLEVBQUEsRUFBQSxNQUFBLEVBQUEsWUFBQSxFQUFBOztBQUFBLE1BQUEsR0FBUzs7QUFDVCxNQUFBLEdBQVM7O0FBQ1QsT0FBQSxHQUFVOztBQUNWLEtBQUEsR0FBUTs7QUFFUixVQUFBLEdBQWE7O0FBQ2IsWUFBQSxHQUFlOztBQUVmLEVBQUEsR0FBSyxRQUFBLENBQUMsSUFBRCxDQUFBO0FBQ0wsTUFBQSxLQUFBLEVBQUEsT0FBQSxFQUFBO0VBQUUsR0FBQSxHQUFNLE1BQU0sQ0FBQyxRQUFRLENBQUM7RUFDdEIsSUFBQSxHQUFPLElBQUksQ0FBQyxPQUFMLENBQWEsU0FBYixFQUF3QixNQUF4QjtFQUNQLEtBQUEsR0FBUSxJQUFJLE1BQUosQ0FBVyxNQUFBLEdBQVMsSUFBVCxHQUFnQixtQkFBM0I7RUFDUixPQUFBLEdBQVUsS0FBSyxDQUFDLElBQU4sQ0FBVyxHQUFYO0VBQ1YsSUFBRyxDQUFJLE9BQUosSUFBZSxDQUFJLE9BQU8sQ0FBQyxDQUFELENBQTdCO0FBQ0UsV0FBTyxLQURUOztBQUVBLFNBQU8sa0JBQUEsQ0FBbUIsT0FBTyxDQUFDLENBQUQsQ0FBRyxDQUFDLE9BQVgsQ0FBbUIsS0FBbkIsRUFBMEIsR0FBMUIsQ0FBbkI7QUFQSjs7QUFTTCxVQUFBLEdBQWEsUUFBQSxDQUFDLENBQUQsQ0FBQTtBQUNULFNBQU8sQ0FDTCxDQUFDLE9BREksQ0FDSSxJQURKLEVBQ1UsT0FEVixDQUVMLENBQUMsT0FGSSxDQUVJLElBRkosRUFFVSxNQUZWLENBR0wsQ0FBQyxPQUhJLENBR0ksSUFISixFQUdVLE1BSFYsQ0FJTCxD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R0FBRyxDQUFDLEtBQWpCLEVBQXdCLEdBQUcsQ0FBQyxHQUE1QjtFQUZnQixDQUFsQjtTQUlBLFdBQUEsQ0FBWSxJQUFaLEVBQWtCLElBQWxCO0FBdEIrQiIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsInBsYXllciA9IG51bGxcclxuc29ja2V0ID0gbnVsbFxyXG5wbGF5aW5nID0gZmFsc2VcclxuZnJlc2ggPSB0cnVlXHJcblxyXG5lbmRlZFRpbWVyID0gbnVsbFxyXG5zdHJlYW1TZWNyZXQgPSBudWxsXHJcblxyXG5xcyA9IChuYW1lKSAtPlxyXG4gIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmXHJcbiAgbmFtZSA9IG5hbWUucmVwbGFjZSgvW1xcW1xcXV0vZywgJ1xcXFwkJicpXHJcbiAgcmVnZXggPSBuZXcgUmVnRXhwKCdbPyZdJyArIG5hbWUgKyAnKD0oW14mI10qKXwmfCN8JCknKVxyXG4gIHJlc3VsdHMgPSByZWdleC5leGVjKHVybCk7XHJcbiAgaWYgbm90IHJlc3VsdHMgb3Igbm90IHJlc3VsdHNbMl1cclxuICAgIHJldHVybiBudWxsXHJcbiAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChyZXN1bHRzWzJdLnJlcGxhY2UoL1xcKy9nLCAnICcpKVxyXG5cclxuZXNjYXBlSHRtbCA9ICh0KSAtPlxyXG4gICAgcmV0dXJuIHRcclxuICAgICAgLnJlcGxhY2UoLyYvZywgXCImYW1wO1wiKVxyXG4gICAgICAucmVwbGFjZSgvPC9nLCBcIiZsdDtcIilcclxuICAgICAgLnJlcGxhY2UoLz4vZywgXCImZ3Q7XCIpXHJcbiAgICAgIC5yZXBsYWNlKC9cIi9nLCBcIiZxdW90O1wiKVxyXG4gICAgICAucmVwbGFjZSgvJy9nLCBcIiYjMDM5O1wiKVxyXG5cclxuIyBhdXRvcGxheSB2aWRlb1xyXG5vblBsYXllclJlYWR5ID0gKGV2ZW50KSAtPlxyXG4gIGV2ZW50LnRhcmdldC5wbGF5VmlkZW8oKVxyXG5cclxuIyB3aGVuIHZpZGVvIGVuZHNcclxub25QbGF5ZXJTdGF0ZUNoYW5nZSA9IChldmVudCkgLT5cclxuICBpZiBlbmRlZFRpbWVyP1xyXG4gICAgY2xlYXJUaW1lb3V0KGVuZGVkVGltZXIpXHJcbiAgICBlbmRlZFRpbWVyID0gbnVsbFxyXG5cclxuICB2aWRlb0RhdGEgPSBwbGF5ZXIuZ2V0VmlkZW9EYXRhKClcclxuICBpZiB2aWRlb0RhdGE/IGFuZCB2aWRlb0RhdGEudGl0bGU/XHJcbiAgICBjb25zb2xlLmxvZyBcIlRpdGxlOiAje3ZpZGVvRGF0YS50aXRsZX1cIlxyXG4gICAgd2luZG93LmRvY3VtZW50LnRpdGxlID0gXCIje3ZpZGVvRGF0YS50aXRsZX0gLSBbW01UVl1dXCJcclxuXHJcbiAgaWYgZXZlbnQuZGF0YSA9PSAwXHJcbiAgICBjb25zb2xlLmxvZyBcIkVOREVEXCJcclxuICAgIGVuZGVkVGltZXIgPSBzZXRUaW1lb3V0KCAtPlxyXG4gICAgICBwbGF5aW5nID0gZmFsc2VcclxuICAgICwgMjAwMClcclxuXHJcbnBsYXkgPSAoaWQsIHN0YXJ0U2Vjb25kcyA9IG51bGwsIGVuZFNlY29uZHMgPSBudWxsKSAtPlxyXG4gIGNvbnNvbGUubG9nIFwiUGxheWluZzogI3tpZH1cIlxyXG4gIG9wdHMgPSB7XHJcbiAgICB2aWRlb0lkOiBpZFxyXG4gIH1cclxuICBpZiBzdGFydFNlY29uZHM/IGFuZCAoc3RhcnRTZWNvbmRzID49IDApXHJcbiAgICBvcHRzLnN0YXJ0U2Vjb25kcyA9IHN0YXJ0U2Vjb25kc1xyXG4gIGlmIGVuZFNlY29uZHM/IGFuZCAoZW5kU2Vjb25kcyA+PSAxKVxyXG4gICAgb3B0cy5lbmRTZWNvbmRzID0gZW5kU2Vjb25kc1xyXG4gIHBsYXllci5sb2FkVmlkZW9CeUlkKG9wdHMpXHJcbiAgcGxheWluZyA9IHRydWVcclxuICBmcmVzaCA9IGZhbHNlXHJcblxyXG50aWNrID0gLT5cclxuICBpZiBub3QgcGxheWluZyBhbmQgcGxheWVyP1xyXG4gICAgY29uc29sZS5sb2cgXCJSZWFkeVwiXHJcbiAgICBzb2NrZXQuZW1pdCAncmVhZHknLCB7XHJcbiAgICAgIHNlY3JldDogc3RyZWFtU2VjcmV0XHJcbiAgICAgIGZyZXNoOiBmcmVzaFxyXG4gICAgfVxyXG5cclxud2luZG93Lm9uWW91VHViZVBsYXllckFQSVJlYWR5ID0gLT5cclxuICBjb25zb2xlLmxvZyBcIm9uWW91VHViZVBsYXllckFQSVJlYWR5XCJcclxuXHJcbiAgcGxheWVyID0gbmV3IFlULlBsYXllciAncGxheWVyJywge1xyXG4gICAgd2lkdGg6ICcxMDAlJ1xyXG4gICAgaGVpZ2h0OiAnMTAwJSdcclxuICAgIHZpZGVvSWQ6ICdBQjd5a09mQWdJQScgIyBNVFYgbG9hZGluZyBzY3JlZW4sIHRoaXMgd2lsbCBiZSByZXBsYWNlZCBhbG1vc3QgaW1tZWRpYXRlbHlcclxuICAgIHBsYXllclZhcnM6IHsgJ2F1dG9wbGF5JzogMSwgJ2NvbnRyb2xzJzogMCB9XHJcbiAgICBldmVudHM6IHtcclxuICAgICAgb25SZWFkeTogb25QbGF5ZXJSZWFkeVxyXG4gICAgICBvblN0YXRlQ2hhbmdlOiBvblBsYXllclN0YXRlQ2hhbmdlXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdHJlYW1TZWNyZXQgPSBxcyhcInNlY3JldFwiKVxyXG4gIGNvbnNvbGUubG9nIFwiU3RyZWFtIFNlY3JldDogI3tzdHJlYW1TZWNyZXR9XCJcclxuXHJcbiAgc29ja2V0ID0gaW8oKVxyXG4gIHNvY2tldC5vbiAncGxheScsIChwa3QpIC0+XHJcbiAgICBjb25zb2xlLmxvZyBwa3RcclxuICAgIHBsYXkocGt0LmlkLCBwa3Quc3RhcnQsIHBrdC5lbmQpXHJcblxyXG4gIHNldEludGVydmFsKHRpY2ssIDUwMDApXHJcbiJdfQ==
